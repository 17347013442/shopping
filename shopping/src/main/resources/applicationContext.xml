<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!--开启注解的扫描，希望处理service和dao，controller不需要Spring框架去处理-->
    <context:component-scan base-package="com.yc" >
        <!--配置哪些注解不扫描-->
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
    </context:component-scan>

 
  


    <!--Spring整合MyBatis框架-->
    
    <!--配置连接池-->
    <context:property-placeholder location="classpath:db.properties"/>
 <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
     <property name="user" value="${username}"></property>
    <property name="password" value="${password}"></property>
     <property name="driverClass" value="${driver}"></property>
     <property name="jdbcUrl" value="${url}"></property>
 </bean>
<!-- 配置sqlSessionfactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    <property name="dataSource" ref="dataSource"></property>
    <!-- 映射文件的地址 -->
    <!-- <property name="mapperLocations" value="classpath*:/*Mapper.xml" ></property> -->
    
    <!-- 使用别名的包 -->
    <property name="typeAliasesPackage" value="com.yc.po"></property>
    <!-- 配置属性信息 采用驼峰法 -->
    <property name="configuration" >
    <bean class="org.apache.ibatis.session.Configuration">
    <property name="mapUnderscoreToCamelCase" value="true"></property>
    </bean>
    
    </property>
    </bean>
    
    
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    <!-- 扫描映射mybatis mapper.xml 的基础包 加入ico容器  与上面的 <property name="mapperLocations"
     value="classpath*:/*Mapper.xml" ></property> 功能相同 根据映射文件找对应接口-->
    <property name="basePackage" value="com.yc.dao"></property> 
    </bean>
  
<!--配置Spring框架声明式事务管理-->
    <!--配置事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!--配置事务通知-->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="find*" read-only="true"/>
            <tx:method name="*" isolation="DEFAULT"/>
        </tx:attributes>
    </tx:advice>

    <!--配置AOP增强-->
    <aop:config>
        <aop:advisor advice-ref="txAdvice" pointcut="execution(* cn.itcast.service.impl.*ServiceImpl.*(..))"/>
    </aop:config>
   <!-- 启动事务注解 -->
   <tx:annotation-driven transaction-manager="transactionManager"/>
   
   

   
    
</beans>